[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Env",
        "importPath": "environs",
        "description": "environs",
        "isExtraImport": true,
        "detail": "environs",
        "documentation": {}
    },
    {
        "label": "NinjaAPI",
        "importPath": "ninja",
        "description": "ninja",
        "isExtraImport": true,
        "detail": "ninja",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "gettext_lazy",
        "importPath": "django.utils.translation",
        "description": "django.utils.translation",
        "isExtraImport": true,
        "detail": "django.utils.translation",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "env",
        "kind": 5,
        "importPath": "backend.basis.settings.django_base_settings",
        "description": "backend.basis.settings.django_base_settings",
        "peekOfCode": "env = Env()\nenv.read_env()\nSECRET_KEY = env('SECRET_KEY')\nDEBUG = env.bool('DEBUG')\nALLOWED_HOSTS = env.list('ALLOWED_HOSTS')\nSECURE_CROSS_ORIGIN_OPENER_POLICY = env('SECURE_CROSS_ORIGIN_OPENER_POLICY', 'same-origin')\nif not DEBUG:\n    USE_X_FORWARDED_HOST = True\n    FORCE_SCRIPT_NAME = '/api'\n# Build paths inside the project like this: BASE_DIR / 'subdir'.",
        "detail": "backend.basis.settings.django_base_settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "backend.basis.settings.django_base_settings",
        "description": "backend.basis.settings.django_base_settings",
        "peekOfCode": "SECRET_KEY = env('SECRET_KEY')\nDEBUG = env.bool('DEBUG')\nALLOWED_HOSTS = env.list('ALLOWED_HOSTS')\nSECURE_CROSS_ORIGIN_OPENER_POLICY = env('SECURE_CROSS_ORIGIN_OPENER_POLICY', 'same-origin')\nif not DEBUG:\n    USE_X_FORWARDED_HOST = True\n    FORCE_SCRIPT_NAME = '/api'\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent.parent\n# Application definition",
        "detail": "backend.basis.settings.django_base_settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "backend.basis.settings.django_base_settings",
        "description": "backend.basis.settings.django_base_settings",
        "peekOfCode": "DEBUG = env.bool('DEBUG')\nALLOWED_HOSTS = env.list('ALLOWED_HOSTS')\nSECURE_CROSS_ORIGIN_OPENER_POLICY = env('SECURE_CROSS_ORIGIN_OPENER_POLICY', 'same-origin')\nif not DEBUG:\n    USE_X_FORWARDED_HOST = True\n    FORCE_SCRIPT_NAME = '/api'\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent.parent\n# Application definition\nINSTALLED_APPS = [",
        "detail": "backend.basis.settings.django_base_settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "backend.basis.settings.django_base_settings",
        "description": "backend.basis.settings.django_base_settings",
        "peekOfCode": "ALLOWED_HOSTS = env.list('ALLOWED_HOSTS')\nSECURE_CROSS_ORIGIN_OPENER_POLICY = env('SECURE_CROSS_ORIGIN_OPENER_POLICY', 'same-origin')\nif not DEBUG:\n    USE_X_FORWARDED_HOST = True\n    FORCE_SCRIPT_NAME = '/api'\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent.parent\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',",
        "detail": "backend.basis.settings.django_base_settings",
        "documentation": {}
    },
    {
        "label": "SECURE_CROSS_ORIGIN_OPENER_POLICY",
        "kind": 5,
        "importPath": "backend.basis.settings.django_base_settings",
        "description": "backend.basis.settings.django_base_settings",
        "peekOfCode": "SECURE_CROSS_ORIGIN_OPENER_POLICY = env('SECURE_CROSS_ORIGIN_OPENER_POLICY', 'same-origin')\nif not DEBUG:\n    USE_X_FORWARDED_HOST = True\n    FORCE_SCRIPT_NAME = '/api'\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent.parent\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',",
        "detail": "backend.basis.settings.django_base_settings",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "backend.basis.settings.django_base_settings",
        "description": "backend.basis.settings.django_base_settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent.parent\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'corsheaders',",
        "detail": "backend.basis.settings.django_base_settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "backend.basis.settings.django_base_settings",
        "description": "backend.basis.settings.django_base_settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'corsheaders',\n    'basis',\n    'ninja',",
        "detail": "backend.basis.settings.django_base_settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "backend.basis.settings.django_base_settings",
        "description": "backend.basis.settings.django_base_settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'corsheaders.middleware.CorsMiddleware',\n    'django.middleware.common.CommonMiddleware',",
        "detail": "backend.basis.settings.django_base_settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "backend.basis.settings.django_base_settings",
        "description": "backend.basis.settings.django_base_settings",
        "peekOfCode": "ROOT_URLCONF = 'basis.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "backend.basis.settings.django_base_settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "backend.basis.settings.django_base_settings",
        "description": "backend.basis.settings.django_base_settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "backend.basis.settings.django_base_settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "backend.basis.settings.django_base_settings",
        "description": "backend.basis.settings.django_base_settings",
        "peekOfCode": "WSGI_APPLICATION = 'basis.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/3.2/ref/settings/#databases\nDATABASES = {\n    'default': env.dict('DATABASES')\n}\n# Password validation\n# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "backend.basis.settings.django_base_settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "backend.basis.settings.django_base_settings",
        "description": "backend.basis.settings.django_base_settings",
        "peekOfCode": "DATABASES = {\n    'default': env.dict('DATABASES')\n}\n# Password validation\n# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {",
        "detail": "backend.basis.settings.django_base_settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "backend.basis.settings.django_base_settings",
        "description": "backend.basis.settings.django_base_settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "backend.basis.settings.django_base_settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "backend.basis.settings.django_base_settings",
        "description": "backend.basis.settings.django_base_settings",
        "peekOfCode": "LANGUAGE_CODE = 'ru-ru'\nTIME_ZONE = 'Asia/Shanghai'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\nSTATIC_ROOT =  BASE_DIR / 'static'\nif DEBUG:",
        "detail": "backend.basis.settings.django_base_settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "backend.basis.settings.django_base_settings",
        "description": "backend.basis.settings.django_base_settings",
        "peekOfCode": "TIME_ZONE = 'Asia/Shanghai'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\nSTATIC_ROOT =  BASE_DIR / 'static'\nif DEBUG:\n    # STATIC_ROOT = ''",
        "detail": "backend.basis.settings.django_base_settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "backend.basis.settings.django_base_settings",
        "description": "backend.basis.settings.django_base_settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\nSTATIC_ROOT =  BASE_DIR / 'static'\nif DEBUG:\n    # STATIC_ROOT = ''\n    STATICFILES_DIRS = [",
        "detail": "backend.basis.settings.django_base_settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "backend.basis.settings.django_base_settings",
        "description": "backend.basis.settings.django_base_settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\nSTATIC_ROOT =  BASE_DIR / 'static'\nif DEBUG:\n    # STATIC_ROOT = ''\n    STATICFILES_DIRS = [\n        BASE_DIR / 'staticfiles',",
        "detail": "backend.basis.settings.django_base_settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "backend.basis.settings.django_base_settings",
        "description": "backend.basis.settings.django_base_settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\nSTATIC_ROOT =  BASE_DIR / 'static'\nif DEBUG:\n    # STATIC_ROOT = ''\n    STATICFILES_DIRS = [\n        BASE_DIR / 'staticfiles',\n    ]",
        "detail": "backend.basis.settings.django_base_settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "backend.basis.settings.django_base_settings",
        "description": "backend.basis.settings.django_base_settings",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATIC_ROOT =  BASE_DIR / 'static'\nif DEBUG:\n    # STATIC_ROOT = ''\n    STATICFILES_DIRS = [\n        BASE_DIR / 'staticfiles',\n    ]\nMEDIA_URL = env('MEDIA_URL')\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type",
        "detail": "backend.basis.settings.django_base_settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "backend.basis.settings.django_base_settings",
        "description": "backend.basis.settings.django_base_settings",
        "peekOfCode": "STATIC_ROOT =  BASE_DIR / 'static'\nif DEBUG:\n    # STATIC_ROOT = ''\n    STATICFILES_DIRS = [\n        BASE_DIR / 'staticfiles',\n    ]\nMEDIA_URL = env('MEDIA_URL')\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field",
        "detail": "backend.basis.settings.django_base_settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "backend.basis.settings.django_base_settings",
        "description": "backend.basis.settings.django_base_settings",
        "peekOfCode": "MEDIA_URL = env('MEDIA_URL')\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend.basis.settings.django_base_settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "backend.basis.settings.django_base_settings",
        "description": "backend.basis.settings.django_base_settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend.basis.settings.django_base_settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "backend.basis.settings.django_base_settings",
        "description": "backend.basis.settings.django_base_settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend.basis.settings.django_base_settings",
        "documentation": {}
    },
    {
        "label": "LOGGING",
        "kind": 5,
        "importPath": "backend.basis.settings.local",
        "description": "backend.basis.settings.local",
        "peekOfCode": "LOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'formatters': {\n        'file': {\n            'format': '%(asctime)s %(name)-12s %(levelname)-8s %(message)s'\n        }\n    },\n    'handlers': {\n        'console': {",
        "detail": "backend.basis.settings.local",
        "documentation": {}
    },
    {
        "label": "api",
        "kind": 5,
        "importPath": "backend.basis.api",
        "description": "backend.basis.api",
        "peekOfCode": "api = NinjaAPI(urls_namespace='api')",
        "detail": "backend.basis.api",
        "documentation": {}
    },
    {
        "label": "BasisConfig",
        "kind": 6,
        "importPath": "backend.basis.apps",
        "description": "backend.basis.apps",
        "peekOfCode": "class BasisConfig(AppConfig):\n    name = 'basis'\n    verbose_name = _('Настройки проекта')",
        "detail": "backend.basis.apps",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend.basis.asgi",
        "description": "backend.basis.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "backend.basis.asgi",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.basis.urls",
        "description": "backend.basis.urls",
        "peekOfCode": "urlpatterns = [\n    path('', api.urls),\n    path('admin/', admin.site.urls),\n]\nif settings.DEBUG:\n    urlpatterns += static(\n        settings.STATIC_URL,\n        document_root=settings.STATIC_ROOT\n    )\n    urlpatterns += static(",
        "detail": "backend.basis.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend.basis.wsgi",
        "description": "backend.basis.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "backend.basis.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "backend.manage",
        "description": "backend.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'basis.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "backend.manage",
        "documentation": {}
    },
    {
        "label": "_Known",
        "kind": 6,
        "importPath": "frontend.node_modules.flatted.python.flatted",
        "description": "frontend.node_modules.flatted.python.flatted",
        "peekOfCode": "class _Known:\n    def __init__(self):\n        self.key = []\n        self.value = []\nclass _String:\n    def __init__(self, value):\n        self.value = value\ndef _array_keys(value):\n    keys = []\n    i = 0",
        "detail": "frontend.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "_String",
        "kind": 6,
        "importPath": "frontend.node_modules.flatted.python.flatted",
        "description": "frontend.node_modules.flatted.python.flatted",
        "peekOfCode": "class _String:\n    def __init__(self, value):\n        self.value = value\ndef _array_keys(value):\n    keys = []\n    i = 0\n    for _ in value:\n        keys.append(i)\n        i += 1\n    return keys",
        "detail": "frontend.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "parse",
        "kind": 2,
        "importPath": "frontend.node_modules.flatted.python.flatted",
        "description": "frontend.node_modules.flatted.python.flatted",
        "peekOfCode": "def parse(value, *args, **kwargs):\n    json = _json.loads(value, *args, **kwargs)\n    wrapped = []\n    for value in json:\n        wrapped.append(_wrap(value))\n    input = []\n    for value in wrapped:\n        if isinstance(value, _String):\n            input.append(value.value)\n        else:",
        "detail": "frontend.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "stringify",
        "kind": 2,
        "importPath": "frontend.node_modules.flatted.python.flatted",
        "description": "frontend.node_modules.flatted.python.flatted",
        "peekOfCode": "def stringify(value, *args, **kwargs):\n    known = _Known()\n    input = []\n    output = []\n    i = int(_index(known, input, value))\n    while i < len(input):\n        output.append(_transform(known, input, input[i]))\n        i += 1\n    return _json.dumps(output, *args, **kwargs)",
        "detail": "frontend.node_modules.flatted.python.flatted",
        "documentation": {}
    }
]